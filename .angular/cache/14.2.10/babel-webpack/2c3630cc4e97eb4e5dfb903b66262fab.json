{"ast":null,"code":"import _asyncToGenerator from \"D:/University/4th_Year/Honours_Project/F20PA-HonoursProject-V2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../socket-manager/socket-manager.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction ChatLayoutComponent_ul_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\")(1, \"li\")(2, \"div\", 5);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const msg_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", msg_r1.topic == \"\" ? \"right\" : \"left\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", msg_r1.reply, \" \");\n  }\n}\n\nexport let ChatLayoutComponent = /*#__PURE__*/(() => {\n  class ChatLayoutComponent {\n    constructor(socketMan) {\n      this.socketMan = socketMan;\n      this.messages = new Array();\n      this.sending = false;\n    }\n\n    ngAfterViewInit() {\n      // this.socketMan.subscribeToEvent(false, 'recieve-message', (reply: String) => {\n      //   console.log(reply.split(':=:'));\n      // })\n      this.socketMan.subscribeToEvent(true, 'bot_uttered', reply => {\n        // console.log(reply);\n        this.messages.push({\n          topic: reply.text.split(':=:')[0],\n          reply: reply.text.split(':=:')[1]\n        });\n        this.sending = false;\n      });\n      let input_area = document.getElementById(\"input\");\n      input_area.value = \"\";\n      this.sending = false;\n    }\n\n    ngOnInit() {}\n\n    submit() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        if (_this.sending) return;\n        let input_area = document.getElementById(\"input\");\n        let msg = input_area.value;\n        _this.sending = true;\n\n        _this.messages.push({\n          topic: \"\",\n          reply: msg\n        });\n\n        _this.socketMan.emitEvent(false, 'create-message', msg);\n\n        _this.socketMan.emitEvent(true, 'user_uttered', msg);\n\n        setTimeout(() => {\n          _this.sending = false;\n        }, 5000);\n      })();\n    }\n\n    goodReview(topic, str) {\n      this.socketMan.emitEvent(false, 'good-reply', {\n        t: topic,\n        s: str\n      });\n    }\n\n    badReview(topic, str) {\n      this.socketMan.emitEvent(false, 'bad-reply', {\n        t: topic,\n        s: str\n      });\n    }\n\n  }\n\n  ChatLayoutComponent.ɵfac = function ChatLayoutComponent_Factory(t) {\n    return new (t || ChatLayoutComponent)(i0.ɵɵdirectiveInject(i1.SocketManagerService));\n  };\n\n  ChatLayoutComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChatLayoutComponent,\n    selectors: [[\"app-chat-layout\"]],\n    decls: 7,\n    vars: 1,\n    consts: [[2, \"display\", \"grid\", \"grid-template-columns\", \"repeat(5, 1fr)\", \"grid-template-rows\", \"repeat(5, 10vh)\"], [\"id\", \"msg-list\", 2, \"grid-row\", \"1/5\", \"grid-column\", \"1/6\", \"overflow-y\", \"scroll\", \"overflow-x\", \"hidden\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"input\", 2, \"grid-row\", \"5/6\", \"grid-column\", \"1/5\"], [2, \"grid-row\", \"5/6\", \"grid-column\", \"5/6\", 3, \"click\"], [2, \"display\", \"flex\", \"flex-direction\", \"row\", 3, \"ngClass\"]],\n    template: function ChatLayoutComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtemplate(2, ChatLayoutComponent_ul_2_Template, 4, 2, \"ul\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"textarea\", 3);\n        i0.ɵɵtext(4, \"\\n    \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function ChatLayoutComponent_Template_button_click_5_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵtext(6, \" Submit \");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgForOf],\n    styles: [\".left[_ngcontent-%COMP%]{position:relative;padding-top:10px;width:100%;text-align:left}.right[_ngcontent-%COMP%]{position:relative;padding-top:10px;width:100%;text-align:right}\"]\n  });\n  return ChatLayoutComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}